admin:
  access_log_path: "/tmp/admin_access.log"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901
static_resources:
  listeners:
    - name: ext_proc_ingress_listener
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 18080
      # per_connection_buffer_limit_bytes: 10240 # 10KB
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ext_proc_ingress_http
                proxy_status_config: {}
                access_log:
                  - name: file-logger-access-logs-http-connection-manager
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                      log_format:
                        text_format_source:
                          inline_string: >
                            [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %REQ(:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %BYTES_RECEIVED% %BYTES_SENT% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST% %DURATION% %REQUEST_DURATION% %REQUEST_TX_DURATION% %RESPONSE_DURATION% %RESPONSE_TX_DURATION%"
                        formatters:
                          - name: envoy.formatter.req_without_query
                            typed_config:
                              "@type": type.googleapis.com/envoy.extensions.formatter.req_without_query.v3.ReqWithoutQuery
                http_filters:
                  - name: envoy.filters.http.ext_proc
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor
                      grpc_service:
                        envoy_grpc:
                          cluster_name: ext-processor-grpc-service
                        timeout: 0.250s
                      failure_mode_allow: false
                      metadata_options:
                        forwarding_namespaces:
                          typed:
                            - "envoy.filters.http.ext_proc"
                          untyped:
                            - "envoy.filters.http.ext_proc"
                        receiving_namespaces:
                          typed:
                            - "envoy.filters.http.ext_proc"
                          untyped:
                            - "envoy.filters.http.ext_proc"
                      route_cache_action: DEFAULT
                      # route_cache_action: CLEAR
                      # route_cache_action: RETAIN
                      mutation_rules:
                        allow_all_routing: true
                      # allow_mode_override: true
                      processing_mode:
                        request_header_mode: SEND
                        response_header_mode: SEND
                        request_trailer_mode: SKIP
                        response_trailer_mode: SKIP
                        request_body_mode: BUFFERED
                        response_body_mode: BUFFERED
                      message_timeout:
                        seconds: 600
                        nanos: 250000000 # 250ms
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                http_protocol_options: {}
                route_config:
                  name: static_routes
                  virtual_hosts:
                    - name: any-domain
                      domains:
                        - "*"
                      routes:
                        - name: post_/full-duplex-streamed
                          match:
                            safe_regex:
                              regex: "^/full-duplex-streamed"
                            headers:
                              - name: ":method"
                                string_match:
                                  exact: "POST"
                          route:
                            append_x_forwarded_host: true
                            cluster: netty
                          typed_per_filter_config:
                            envoy.filters.http.ext_proc:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_proc.v3.ExtProcPerRoute
                              overrides:
                                processing_mode:
                                  request_header_mode: SEND
                                  response_header_mode: SEND
                                  request_body_mode: FULL_DUPLEX_STREAMED # BUFFERED STREAMED FULL_DUPLEX_STREAMED NONE
                                  response_body_mode: FULL_DUPLEX_STREAMED # BUFFERED STREAMED FULL_DUPLEX_STREAMED
                                  request_trailer_mode: SKIP
                                  response_trailer_mode: SKIP
                        - name: post_/streamed
                          match:
                            safe_regex:
                              regex: "^/streamed"
                            headers:
                              - name: ":method"
                                string_match:
                                  exact: "POST"
                          route:
                            append_x_forwarded_host: true
                            cluster: netty
                          typed_per_filter_config:
                            envoy.filters.http.ext_proc:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_proc.v3.ExtProcPerRoute
                              overrides:
                                processing_mode:
                                  request_header_mode: SEND
                                  response_header_mode: SEND
                                  request_body_mode: STREAMED # BUFFERED STREAMED FULL_DUPLEX_STREAMED NONE
                                  response_body_mode: STREAMED # BUFFERED STREAMED FULL_DUPLEX_STREAMED
                                  request_trailer_mode: SKIP
                                  response_trailer_mode: SKIP
    
    - name: non_ext_proc_ingress_listener
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 19090
      # per_connection_buffer_limit_bytes: 104857600
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ingress_http
                proxy_status_config: {}
                access_log:
                  - name: file-logger-access-logs-http-connection-manager
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                      log_format:
                        text_format_source:
                          inline_string: >
                            [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %REQ(:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %BYTES_RECEIVED% %BYTES_SENT% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST% %DURATION% %REQUEST_DURATION% %REQUEST_TX_DURATION% %RESPONSE_DURATION% %RESPONSE_TX_DURATION%  medReqDur: %DYNAMIC_METADATA(envoy.filters.http.lua:mediation.req.duration)% medResDur: %DYNAMIC_METADATA(envoy.filters.http.lua:mediation.res.duration)%"
                        formatters:
                          - name: envoy.formatter.req_without_query
                            typed_config:
                              "@type": type.googleapis.com/envoy.extensions.formatter.req_without_query.v3.ReqWithoutQuery
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                http_protocol_options: {}
                route_config:
                  name: static_routes
                  virtual_hosts:
                    - name: any-domain
                      domains:
                        - "*"
                      routes:
                        - name: post_/pets/{petId}/history
                          match:
                            safe_regex:
                              regex: "^/pets/([^/]+)/history"
                            headers:
                              - name: ":method"
                                string_match:
                                  exact: "POST"
                          route:
                            append_x_forwarded_host: true
                            cluster: netty

  clusters:
    - name: netty
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      # per_connection_buffer_limit_bytes: 10240 # 10KB
      load_assignment:
        cluster_name: netty
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: echo-netty
                      port_value: 8688
    - name: ext-processor-grpc-service
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      # per_connection_buffer_limit_bytes: 10240 # 10KB
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options: {}
      load_assignment:
        cluster_name: ext-processor-grpc-service
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: host.docker.internal
                  # address: ext-proc
                  port_value: 9001
